#!/bin/bash
if [ -z "$API_KEY" ]; then
  echo "API_KEY is not configured"
  exit 1
fi

if [ -z "$API_SECRET" ]; then
  echo "API_SECRET is not configured"
  exit 1
fi

if [ -z "$PASSPHRASE" ]; then
  echo "PASSPHRASE is not configured"
  exit 1
fi

if [ -z "$USER" ]; then
  echo "PASSPHRASE is not configured"
  exit 1
fi

if [ -z "$FQDN" ]; then
  echo "PLATFORM_URL is not configured"
  exit 1
fi

PLATFORM_URL="https://$FQDN"


export CMD=""

if [ -z "$1" ]; then
  curl -s -H "api-key: $API_KEY" -H "api-secret: $API_SECRET" $PLATFORM_URL/state/jobInstance | jq -c '.[] | { id: .id, job_id: .job_id, status: .status, abandon_ct: .abandon_ct, fail_ct: .fail_ct, success_ct: .success_ct }'
  exit 0;
fi

if [ $1 == "--help" ]; then
    echo "usage: courier state list-job-instances"
    echo "Flags"
    echo "--help"
    echo "--json"
    echo "--raw"
    exit 0
fi

if [ $1 == "--json" ]; then
  curl -s -H "api-key: $API_KEY" -H "api-secret: $API_SECRET" $PLATFORM_URL/state/jobInstance | jq 
  exit 0
fi

if [ $1 == "--raw" ]; then
  curl -s -H "api-key: $API_KEY" -H "api-secret: $API_SECRET" $PLATFORM_URL/state/jobInstance
  exit 0
fi

export JobID=$1
curl -s -H "api-key: $API_KEY" -H "api-secret: $API_SECRET" $PLATFORM_URL/state/jobInstance | jq -c '.[] | select(.job_id==env.JobID) | { id: .id, job_id: .job_id, status: .status, abandon_ct: .abandon_ct, fail_ct: .fail_ct, success_ct: .success_ct }'
